{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Adams Tiem Orbit",
	"patterns": [		
		{
			"include": "#numerics"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#commands"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"commands": {
			"patterns": [
				{
					"name": "command.command",
					"match": "^\\[.*\\]\\s*$"					
				},
				{
					"name": "command.control",
					"match": "^\\(.*\\)\\s*$"		
				},
				{
					"name": "command.argument",
					"match": "^\\{.*\\}\\s*$"	
				},
				{
					"name": "command.argument",
					"match": "^\\s*\\w*\\s*(?=\\=)"
				}
			]
		},
		"numerics": {
			"patterns": [
				{
				"name": "constant.numeric", 
				"match": "\\b[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "constant.language",
					"match": "(?i)\\b(yes|no|on|off|none)\\b"
				},
				{
					"name": "keyword.operator",
					"match": "(\\+|\\-|\\=|\\*|//|\\.|\\?|:)"
				}
			]
		},
		"functions": {
			"patterns": [{
				"name": "entity.name.function", 
				"match": "(?i)\\b(ABS|ACOS|AGGREGATE_MASS|AINT|AKIMA_SPLINE|AKIMA_SPLINE2|ALERT|ALERT2|ALERT3|ALIGN|ALLM|ANGLES|ANINT|ANYM|APPEND|HOT_SPOTS|ASIN|ATAN|ATAN2|AVIEW_EDIT_FILE|AX|AY|AZ|BACKUP_FILE|BALANCE|BARTLETT|BARTLETT_WINDOW|BLACKMAN|BLACKMAN_WINDOW|BODEABCD|BODELSE|BODELSM|BODESEQ|BODETFCOEF|BODETFS|BUTTER_DENOMINATOR|BUTTER_FILTER|BUTTER_NUMERATOR|BUTTORD_FREQUENCY|BUTTORD_ORDER|CEIL|CENTER|CHDIR|CLIP|COLS|COMPRESS|COND|CONVERT_ANGLES|COPY_FILES|COS|COSH|CROSS|CSPLINE|CUBIC_SPLINE|DB_ACTIVE|DB_ANCESTOR|DB_CHANGED|DB_CHILDREN|DB_COUNT|DB_DEFAULT|DB_DEFAULT_NAME|DB_DEFAULT_NAME_FOR_TYPE|DB_DELETE_DEPENDENTS|DB_DEL_PARAM_DEPENDENTS|DB_DEL_UNPARAM_DEPENDENTS|DB_DEPENDENTS|DB_DEPENDENTS_EXHAUSTIVE|DB_DESCENDANTS|DB_EXISTS|DB_FIELD_FILTER|DB_FIELD_TYPE|DB_FILTER_NAME|DB_FILTER_TYPE|DB_FULL_NAME_FROM_SHORT|DB_FULL_TYPE_FIELDS|DB_IMMEDIATE_CHILDREN|DB_OBJECT_COUNT|DB_OBJ_EXISTS|DB_OBJ_EXISTS_EXHAUSTIVE|DB_OBJ_FROM_NAME_TYPE|DB_OF_CLASS|DB_OF_TYPE_EXISTS|DB_OLDEST_ANCESTOR|DB_REFERENTS|DB_REFERENTS_EXHAUSTIVE|DB_SHORT_NAME|DB_TWO_WAY|DB_TYPE|DB_TYPE_FIELDS|DET|DETREND|DIFF|DIFFERENTIATE|DIM|DM|DMAT|DOE_MATRIX|DOE_NUM_TERMS|DOT|DX|DY|DZ|EIG_DI|EIG_DR|EIG_VI|EIG_VR|EIGENVALUES_I|EIGENVALUES_R|ELEMENT|EVAL|EXCLUDE|EXECUTE_VIEW_COMMAND|EXP|EXPR_EXISTS|EXPR_REFERENCE|EXPR_REFERENCES|EXPR_STRING|FFTMAG|FFTPHASE|FILE_ALERT|FILE_DIRECTORY_NAME|FILE_EXISTS|FILE_MINUS_EXT|FILE_TEMP_NAME|FILTER|FILTFILT|FIND_MACRO_FROM_COMMAND|FIRST|FIRST_N|FLOOR|FREQUENCY|GETCWD|GETENV|GRIDDATA|GUICLEANUP|HAMMING|HAMMING_WINDOW|HANNING|HANNING_WINDOW|HERMITE_SPLINE|INCLUDE|INT|INTEGR|INTEGRATE|INTERP1|INTERP2|INTERPFT|INVERSE|LAST|LAST_N|LINEAR_SPLINE|LOC_ALONG_LINE|LOC_BY_FLEXBODY_NODEID|LOC_CYLINDRICAL|LOC_FRAME_MIRROR|LOC_GLOBAL|LOC_INLINE|LOC_LOC|LOC_LOCAL|LOC_MIRROR|LOC_ON_AXIS|LOC_ON_LINE|LOC_PERPENDICULAR|LOC_PLANE_MIRROR|LOC_RELATIVE_TO|LOC_SPHERICAL|LOC_TO_FLEXBODY_NODEID|LOC_X_AXIS|LOC_Y_AXIS|LOC_Z_AXIS|LOCAL_FILE_ NAME|LOG|LOG10|MAG|MAX|MAXI|MEAN|MEASURE|MESHGRID|MIN|MINI|MKDIR|MOD|NINT|NODE_ID_CLOSEST|NODE_ID_IS_INTERFACE|NODE_IDS_CLOSEST_TO|NODE_IDS_IN_VOLUME|NODE_IDS_WITHIN_RADIUS|NODE_NODE_CLOSEST|NORM|NORM2|NORMALIZE|NOTAKNOT_SPLINE|OBJECTIVE_UNIT|OBJECTIVE_VALUE|ON_OFF|ORI_ALIGN_AXIS|ORI_ALIGN_AXIS_EUL|ORI_ALL_AXES|ORI_ALONG_AXIS|ORI_FRAME_MIRROR|ORI_GLOBAL|ORI_IN_PLANE|ORI_LOCAL|ORI_MIRROR|ORI_ONE_AXIS|ORI_ORI|ORI_PLANE_MIRROR|ORI_RELATIVE_TO|OTABLE_CHANGED_CELLS|PARAM_STRING|PARSE_STATUS|PARZEN|PARZEN_WINDOW|PHI|PICK_OBJECT|PITCH|POLYFIT|POLYVAL|PROD|PSD|PSI|PUTENV|PWELCH|RAND|Real LIFE (FlexBody [, Analysis])|Real MAX_STRESS (Body, Criterion)|READ_T_O_OPEN_FILE|READ_T_O_CLOSE_FILE|READ_T_O_FIND_BLOCK|READ_T_O_FIND_SUBBLOCK|READ_T_O_UNITS|READ_T_O_CHECK_HEADER|READ_T_O_INTEGER|READ_T_O_SUBBLOCK_INTEGER|READ_T_O_REAL|READ_T_O_REAL_ARRAY|READ_T_O_SUBBLOCK_REAL|READ_T_O_SUBBLOCK_REAL_ARRAY|READ_T_O_STRING|READ_T_O_SUBBLOCK_STRING|READ_T_O_TABLE_COLUMN|READ_T_O_SUBBLOCK_TABLE_COLUMN|READ_T_O_START_TABLE_READ|READ_T_O_START_SUBBLOCK_TABLE_READ|READ_T_O_READ_TABLE_LINE|READ_T_O_NEXT_BLOCK|READ_T_O_NEXT_ATTRIBUTE|READ_T_O_BLOCK_EXISTS|READ_T_O_ATTRIBUTE_EXISTS|RECTANGULAR|RECTANGULAR_WINDOW|REMOVE_FILE|RENAME_FILE|REPLACE_DELIMITER|RESAMPLE|RESHAPE|REVERSE|RMDIR|RMS|ROLL|ROWS|RTOI|RUN_PYTHON_CODE|RUN_PYTHON_FILE|SECURITY_CHECK|SELECT_DIRECTORY|SELECT_FIELD|SELECT_FILE|SELECT_MULTI_TEXT|SELECT_OBJECT|SELECT_OBJECTS|SELECT_REQUEST_IDS|SELECT_TEXT|SELECT_TYPE|SERIES|SHAPE|SERIES2|SIGN|SIM_STATUS|SIM_TIME|SIN|SINH|SORT|SORT_BY|SORT_INDEX|SPLINE|SQRT|SSQ|STACK|STATUS_PRINT|STEP|STOI|STOO|STOR|STR_CASE|STR_CHR|STR_COMPARE|STR_DATE|STR_DELETE|STR_FIND|STR_FIND_COUNT|STR_FIND_IN_STRINGS|STR_FIND_N|STR_INSERT|STR_IS_REAL|STR_IS_SPACE|STR_LENGTH|STR_MATCH|STR_PRINT|STR_REMOVE_WHITESPACE|STR_REPLACE_ALL|STR_SPLIT|STR_SPRINTF|STR_SUBSTR|STR_TIMESTAMP|STR_XLATE|SUM|SYS_INFO|TABLE_COLUMN_SELECTED_CELLS|TABLE_GET_CELLS|TABLE_GET_DIMENSION|TABLE_GET_REALS|TABLE_GET_SELECTED_COLS|TABLE_GET_SELECTED_ROWS|TAN|TANH|TERM_STATUS|THETA|TILDE|TIMER_CPU|TIMER_ELAPSED|TMAT3|TMAT|TRANSPOSE|TRIANGULAR|TRIANGULAR_WINDOW|UNIQUE|UNIQUE_FILE_NAME|UNIQUE_ID|UNIQUE_FULL_NAME|UNIQUE_LOCAL_NAME|UNIQUE_NAME|UNIQUE_NAME_IN_HIERARCHY|UNIQUE_PARTIAL_NAME|UNITS_STRING|UNITS_CONVERSION_FACTOR|UNITS_TYPE|UNITS_VALUE|UNWRAP|USER_STRING|VAL|VALAT|VALI|WELCH|WELCH_WINDOW|WRITE_T_O_OPEN_FILE|WRITE_T_O_CLOSE_FILE|WRITE_T_O_UNITS|WRITE_T_O_DATA_BLOCK|WRITE_T_O_SUBBLOCK|WRITE_T_O_INTEGER|WRITE_T_O_REAL|WRITE_T_O_REAL_ARRAY|WRITE_T_O_PUSH_PRECISION|WRITE_T_O_POP_PRECISION|WRITE_T_O_STRING|WRITE_T_O_TABLE_HEADER|WRITE_T_O_TABLE_REALS|WRITE_I_N_TABLE_REALS|WRITE_T_O_TABLE_LINE|WRITE_T_O_TABLE_STRING|WRITE_T_O_COMMENT|YAW)\\b"
				}]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.builtin",
					"match": "(?i)\\b(pi|dtor|rtod|time)"
				}
			]
		},
		"strings": {
				"name": "string.quoted.double.adams_to",
				"begin": "'",
				"end": "'"
			},
		"comments": {
			"name": "comment",
			"begin": "^\\s*[!\\$]",
			"end": "$",
			"patterns": [
				{
					"name": "keyword", 			
					"match": "(NOTE:)|(TODO:)"				
				}
			]
		}
	},
	"scopeName": "source.adams_to"
}
