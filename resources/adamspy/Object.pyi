import AppearanceSettings
from typing import Any

BUFFER_SIZE: int

class InvalidNameError(AttributeError): ...
class DuplicateAttributeError(AttributeError): ...
class DependentsError(Exception): ...

def dupAttrError() -> None: ...
def amdNameFromUnicodeName(dname, entTyp, pDBKey): ...
def checkUniqueName(obj, name, objClassNam): ...

class ObjectMeta(type):
    def __init__(cls, name, bases, dct) -> None: ...

class ObjectSubBase(metaclass=ObjectMeta):
    def __init__(self, _DBKey) -> None: ...
    def unsetProperties(self, *args) -> None: ...
    def setProperties(self, **kwargs) -> None: ...
    update: Any
    @property
    def properties(self): ...
    parent: Any
    @property
    def info(self): ...
    def help(self, prop: Any | None = ...) -> None: ...
    def className(self): ...
    def destroy(self): ...
    def __copy__(self): ...
    def __deepcopy__(self, memodict=...): ...
    def copy(self): ...
    def __eq__(self, other): ...
    def __dir__(self, all: bool = ...): ...

class ObjectBase(ObjectSubBase):
    def __init__(self, _DBKey) -> None: ...
    name: str
    full_name: str
    def destroy(self): ...
    @property
    def info(self): ...
    def copy(self, new_name: Any | None = ...): ...

class ObjectComment(ObjectBase):
    DesignVariables: Any
    def __init__(self, _DBKey) -> None: ...
    comments: Any

class ObjectAdamsId:
    adams_id: int

class Object(ObjectComment, ObjectAdamsId, AppearanceSettings.AppearanceSettings):
    def __init__(self, _DBKey) -> None: ...
